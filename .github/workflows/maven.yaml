#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# This workflow will build a Java project with Maven
# See also:
#   https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: QA

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

permissions:
  contents: read

jobs:
  # fast build to populate the local maven repository cache
  fastbuild:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: adopt
        java-version: 11
    - name: Cache local maven repository
      uses: actions/cache@v3
      with:
        path: |
          ~/.m2/repository/
          !~/.m2/repository/org/apache/accumulo
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Show the first log message
      run: git log -n1
    - name: Check for unapproved characters
      run: contrib/ci/find-unapproved-chars.sh
    - name: Check for unapproved JUnit API usage
      run: contrib/ci/find-unapproved-junit.sh
    - name: Build with Maven (Fast Build)
      timeout-minutes: 20
      run: mvn -B -V -e -ntp "-Dstyle.color=always" clean package dependency:resolve -DskipTests -DskipFormat -DverifyFormat
      env:
        MAVEN_OPTS: -Djansi.force=true
  # more complete builds with tests
  mvn:
    needs: fastbuild
    strategy:
      matrix:
        profile:
          - {name: 'unit-tests',    javaver: 11, args: 'verify -PskipQA -DskipTests=false'}
          - {name: 'qa-checks',     javaver: 11, args: 'verify javadoc:jar -Psec-bugs -DskipTests -Dspotbugs.timeout=3600000'}
          - {name: 'compat',        javaver: 11, args: 'package -DskipTests -Dhadoop.version=3.0.3 -Dzookeeper.version=3.5.10'}
          - {name: 'errorprone',    javaver: 11, args: 'verify -Perrorprone,skipQA'}
          - {name: 'jdk17',         javaver: 17, args: 'verify -DskipITs'}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK ${{ matrix.profile.javaver }}
      uses: actions/setup-java@v3
      with:
        distribution: adopt
        java-version: ${{ matrix.profile.javaver }}
    - name: Cache local maven repository
      uses: actions/cache@v3
      with:
        path: |
          ~/.m2/repository/
          !~/.m2/repository/org/apache/accumulo
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Override DNS to fix IP address for hostname
      run: |
        ip -br addr
        echo "'hostname -i' shows '$(hostname -i)'"
        echo "'hostname -I' shows '$(hostname -I)'"
        hostname_short=$(hostname -s)
        hostname_long=$(hostname -f)
        if ! grep -q $hostname_short /etc/hosts; then
          actual_ip=$(ip -4 addr show dev eth0 | grep -o 'inet [0-9.]*' | cut -f2 -d ' ')
          echo "Setting $hostname_long / $hostname_short to $actual_ip in /etc/hosts"
          echo "$actual_ip $hostname_long $hostname_short" | sudo tee -a /etc/hosts
          ip -br addr
          echo "'hostname -i' shows '$(hostname -i)'"
          echo "'hostname -I' shows '$(hostname -I)'"
        fi
    - name: Build with Maven (${{ matrix.profile.name }})
      timeout-minutes: 60
      run: mvn -B -V -e -ntp "-Dstyle.color=always" -DskipFormat ${{ matrix.profile.args }}
      env:
        MAVEN_OPTS: -Djansi.force=true
    - name: Upload unit test results
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: surefire-reports-${{ matrix.profile.name }}
        path: ./**/target/surefire-reports/
        if-no-files-found: ignore
    - name: Upload integration test results
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: failsafe-reports-${{ matrix.profile.name }}
        path: ./**/target/failsafe-reports/
        if-no-files-found: ignore
    - name: Upload mini test logs
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: mini-tests-logs-${{ matrix.profile.name }}
        path: ./**/target/**/mini-tests/**/logs/
        if-no-files-found: ignore

