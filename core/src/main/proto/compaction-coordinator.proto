//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//

syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.apache.accumulo.core.compaction.protobuf";
option java_outer_classname = "CompactionCoordinatorServiceProto";
import "security.proto";
import "client.proto";
import "data.proto";
import "tabletserver.proto";
import "manager.proto";

package compaction_coordinator;

// Interface exported by the server.
service CompactionCoordinatorService {
  rpc GetCompactionJob(CompactionJobRequest) returns (PNextCompactionJob) {}
}


message PExternalCompactionJob {
  optional string externalCompactionId = 1;
  optional data.PKeyExtent extent = 2;
  repeated tablet_server.PInputFile files = 3;
  optional tablet_server.PIteratorConfig iteratorSettings = 4;
  optional string outputFile = 5;
  optional bool propagateDeletes = 6;
  optional tablet_server.PCompactionKind kind = 7;
  optional manager.PFateId fateId = 8;
  map<string, string> overrides = 9;
}

message PNextCompactionJob {
  PExternalCompactionJob job = 1;
  int32 compactorCount = 2;
}

message CompactionJobRequest {
  client.ProtoTInfo ptinfo = 1;
  security.PCredentials credentials = 2;
  string groupName = 3;
  string compactor = 4;
  string externalCompactionId = 5;
}
