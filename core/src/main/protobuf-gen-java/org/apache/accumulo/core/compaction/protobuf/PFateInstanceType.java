/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compaction-coordinator.proto

// Protobuf Java Version: 3.25.3
package org.apache.accumulo.core.compaction.protobuf;

/**
 * Protobuf enum {@code compaction_coordinator.PFateInstanceType}
 */
public enum PFateInstanceType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>FI_UNKNOWN = 0;</code>
   */
  FI_UNKNOWN(0),
  /**
   * <code>FI_META = 1;</code>
   */
  FI_META(1),
  /**
   * <code>FI_USER = 2;</code>
   */
  FI_USER(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>FI_UNKNOWN = 0;</code>
   */
  public static final int FI_UNKNOWN_VALUE = 0;
  /**
   * <code>FI_META = 1;</code>
   */
  public static final int FI_META_VALUE = 1;
  /**
   * <code>FI_USER = 2;</code>
   */
  public static final int FI_USER_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static PFateInstanceType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static PFateInstanceType forNumber(int value) {
    switch (value) {
      case 0: return FI_UNKNOWN;
      case 1: return FI_META;
      case 2: return FI_USER;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<PFateInstanceType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      PFateInstanceType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<PFateInstanceType>() {
          public PFateInstanceType findValueByNumber(int number) {
            return PFateInstanceType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.apache.accumulo.core.compaction.protobuf.CompactionCoordinatorServiceProto.getDescriptor().getEnumTypes().get(1);
  }

  private static final PFateInstanceType[] VALUES = values();

  public static PFateInstanceType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private PFateInstanceType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:compaction_coordinator.PFateInstanceType)
}

